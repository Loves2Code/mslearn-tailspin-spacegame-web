# CI/CD pipeline SpaceGame - web
# Jim's First Yml project
# 10/01/2019

trigger:
- build-pipeline

pool:
  vmImage: 'Ubuntu-latest'
  demands:
    - npm
    
variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '2.1.505'
    
steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'
  
- task: gulp@1
  displayName: 'Run gulp tasks'
  
- script: 'echo "DefinitionName: $(Build.DefinitionName), BuildId: $(Build.BuildId), BuildNumber: $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)
  
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    
#- task: DotNetCoreCLI@2
#  displayName: 'Build the project - $(buildConfiguration)'
#  inputs:
#    command: 'build'
#    arguments: '--no-restore --configuration $(buildConfiguration)'
#    projects: '**/*.csproj'

# Call the build from a template in mslearn-tailspin-spacegame-web/templates/build.yml
- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'


- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
